{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.1f2e60d2.js","sourceRoot":"..","sourcesContent":["const form = document.getElementById('form')\nconst userIdField = document.getElementById('userId') as HTMLInputElement\nconst tokenField = document.getElementById('token') as HTMLInputElement\nconst button = document.getElementById('fetch') as HTMLButtonElement\nconst checkFields = () => {\n  button.disabled = !(userIdField.value.trim() && tokenField.value.replace(/[^a-z\\d]/gi, ''))\n}\n\nform?.addEventListener(\n  'submit',\n  (e) => {\n    e.preventDefault()\n    window.getContent(userIdField.value.trim(), tokenField.value.replace(/[^a-z\\d]/gi, ''))\n  },\n  false\n)\nuserIdField?.addEventListener('change', checkFields)\nuserIdField?.addEventListener('input', checkFields)\ntokenField?.addEventListener('change', checkFields)\ntokenField?.addEventListener('input', checkFields)\n\ntype ReqTypeMyWOD = { kind: 'myWOD'; year?: number; month?: number }\ntype ReqTypeWorkout = { kind: 'workout'; id: number }\ntype ReqType = {\n  userId: string // number\n  token: string\n} & (ReqTypeMyWOD | ReqTypeWorkout)\n\ntype DateResponse = { year: number; month: number }\ntype MyWODResponse = {\n  date: DateResponse\n  prev: DateResponse\n  myWOD: Array<{\n    name: string\n    id_wod_whiteboard: number\n    date_wod_en: string\n  }>\n}\n\ntype WorkoutResponse = {\n  wod: {\n    id_wod_whiteboard: number\n    id_wod_score_as: number\n    date_wod: string\n    date_wod_en: string\n    name: string\n    description: string\n    rx: boolean\n    has_benchmark: boolean\n    benchmark: {\n      results: Array<{\n        id_wod_whiteboard: number\n        date_wod: string\n        score: string\n        type: string\n      }>\n      pr: string\n    }\n  }\n  appuser_result: {\n    minutes: number\n    seconds: string\n    distance: number\n    weight: number\n    rounds: number\n    reps: number\n    rx: 0 | 1\n    weight_scaled: number\n    comment: string\n  }\n}\n\nconst delay = (ms: number) => <T>(value: T) =>\n  new Promise<T>((resolve) => setTimeout(() => resolve(value), ms))\n\nconst delay300 = delay(300)\n\nconst headers = new Headers({\n  'Content-Type': 'application/x-www-form-urlencoded',\n  Host: 'ws.personaltrainerapp.nl',\n})\n\nconst gymIdGouda = 2461\n\nasync function fetchCached(data: ReqType) {\n  const key = JSON.stringify(data)\n  let json = window.localStorage.getItem(key)\n\n  if (json) return JSON.parse(json)\n\n  const task = fetch('https://ws.personaltrainerapp.nl', {\n    headers,\n    method: 'POST',\n    body: [\n      'data[service]=WOD',\n      'data[method]=whiteboard',\n      `data[idc]=${gymIdGouda}`,\n      `data[id_appuser]=${data.userId}`,\n      'data[version_wod]=1',\n      'data[app]=wodapp',\n      'data[language]=nl_NL',\n      'data[version]=14.0',\n      'data[clientUserAgent]=browser',\n      `data[token]=${data.token}`,\n      'data[id_gym]=2461',\n      'data[companySyncVersions][accesslevels][version]=39',\n      'data[companySyncVersions][accesslevels][version_pnp]=42',\n      'data[companySyncVersions][styles][version]=0',\n      'data[companySyncVersions][styles][version_pnp]=0',\n      `data[id_appuser_li]=${data.userId}`,\n      data.kind === 'myWOD' && data.year\n        ? `data[page]=myWOD&data[year]=${data.year}&data[month]=${data.month}`\n        : data.kind === 'myWOD'\n        ? `data[page]=myWOD`\n        : `data[page]=workout&data[id_wod_whiteboard]=${data.id}`,\n    ].join('&'),\n  })\n\n  // Throttle requests\n  const [res, _] = await Promise.all([task, delay300(true)])\n\n  json = await res.json()\n  window.localStorage.setItem(key, JSON.stringify(json))\n\n  return json\n}\n\nasync function getData<T extends ReqType>(\n  data: T\n): Promise<T extends ReqTypeMyWOD ? MyWODResponse : WorkoutResponse> {\n  const json = await fetchCached(data)\n\n  return data.kind === 'myWOD'\n    ? {\n        date: json.date,\n        prev: json.pagination?.prev,\n        myWOD: json.myWOD,\n      }\n    : json\n}\n\nasync function getContent(userId: string, token: string) {\n  document.getElementById('results')!.innerHTML = `\n    <form>\n      <button onClick=\"window.download('json', '${userId}', '${token}')\">Download json</button>\n      <button onClick=\"window.download('html', '${userId}', '${token}')\">Download html</button>\n    </form>\n  `\n  const dateOptions = { year: 'numeric', month: 'long' }\n  const dateOptionsWod = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n\n  let result = await getData({ kind: 'myWOD', userId, token })\n  while (result?.myWOD?.length) {\n    const wods = await Promise.all(\n      result.myWOD.map((wod) =>\n        getData({ kind: 'workout', id: wod.id_wod_whiteboard, userId, token })\n      )\n    )\n\n    document.getElementById('results')!.innerHTML += `\n      <details class=\"month\">\n        <summary><strong>${new Date(result.date.year, result.date.month, 1).toLocaleDateString(\n          'nl',\n          dateOptions\n        )}</strong></summary>\n        <div>\n          ${wods\n            .map(\n              (wod) => `\n            <details class=\"wod\">\n              <summary>${wod.wod.name}</summary>\n              <div class=\"wod__details\">\n                <div><code style=\"font-size: 0.9em\">\n                  ${new Date(wod.wod.date_wod_en).toLocaleDateString('nl', dateOptionsWod)} - ${\n                wod.wod.description\n              }</code></div>\n                <div>\n                  <span>\n                    <code class=\"time\">\n                    ${\n                      wod.wod.id_wod_score_as === 7\n                        ? `${wod.appuser_result.reps}`\n                        : wod.wod.id_wod_score_as === 6\n                        ? `${wod.appuser_result.distance}`\n                        : wod.wod.id_wod_score_as === 5\n                        ? `${wod.appuser_result.weight}`\n                        : wod.wod.id_wod_score_as === 3\n                        ? `${wod.appuser_result.rounds}/${wod.appuser_result.reps}`\n                        : wod.wod.id_wod_score_as === 2\n                        ? `${wod.appuser_result.minutes}:${wod.appuser_result.seconds}`\n                        : `${wod.appuser_result.rounds}/${wod.appuser_result.reps}`\n                    }</code>\n                    <span class=\"label\">${wod.appuser_result.rx === 1 ? 'rx' : 'scaled'}</span>\n                  </span>\n                  ${\n                    wod.appuser_result.comment.trim()\n                      ? `<textarea readonly cols=\"40\" rows=\"5\">${wod.appuser_result.comment.replace(\n                          /(<br ?\\/>)/gi,\n                          ''\n                        )}</textarea>`\n                      : ``\n                  }\n                </div>\n              </div>\n            </details>\n            `\n            )\n            .join('')}\n        </div>\n      </details>\n    `\n    if (result.prev) {\n      result = await getData({\n        kind: 'myWOD',\n        year: result.prev.year,\n        month: result.prev.month,\n        userId,\n        token,\n      })\n    } else {\n      break\n    }\n  }\n}\n\nasync function fetchAll(userId: string, token: string) {\n  const results = []\n  let result = await getData({ kind: 'myWOD', userId, token })\n  while (result?.myWOD?.length) {\n    const wods = await Promise.all(\n      result.myWOD.map((wod) =>\n        getData({ kind: 'workout', id: wod.id_wod_whiteboard, userId, token })\n      )\n    )\n    results.push({ date: result, wods })\n    if (result.prev) {\n      result = await getData({\n        kind: 'myWOD',\n        year: result.prev.year,\n        month: result.prev.month,\n        userId,\n        token,\n      })\n    } else {\n      break\n    }\n  }\n  return results\n}\n\nasync function download(type: 'json' | 'html', userId: string, token: string) {\n  let blob: Blob\n  let fileName = 'WodApp-export'\n  if (type === 'json') {\n    const data = await fetchAll(userId, token)\n    blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n    fileName += '.json'\n  } else {\n    const doc = document.createElement('html')\n    doc.innerHTML = document.documentElement.innerHTML\n    const nodes = Array.from(doc.querySelectorAll('button, script, link, .no-export'))\n    nodes.forEach((node) => node.remove())\n    blob = new Blob([doc.innerHTML], { type: 'text/html' })\n    fileName += '.html'\n  }\n\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    window.navigator.msSaveBlob(blob, fileName)\n  } else {\n    const blobURL = window.URL.createObjectURL(blob)\n    const tempLink = document.createElement('a')\n    tempLink.style.display = 'none'\n    tempLink.href = blobURL\n    tempLink.setAttribute('download', fileName)\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank')\n    }\n    document.body.appendChild(tempLink)\n    tempLink.click()\n    document.body.removeChild(tempLink)\n    window.URL.revokeObjectURL(blobURL)\n  }\n}\n\nwindow.getContent = getContent\nwindow.download = download\n"]}